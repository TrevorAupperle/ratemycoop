import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { useRouter } from "next/router";
import { Fragment, useState } from "react";
import RatingBars from "~/components/RatingBars";
import {
  ChevronDownIcon,
  FlagIcon as FlagIconSolid,
} from "@heroicons/react/20/solid";
import { FlagIcon } from "@heroicons/react/24/outline";
import { Menu, Transition } from "@headlessui/react";
import Navbar from "~/components/Navbar";
import Footer from "~/components/Footer";

type Major =
  | "Undecided"
  | "Aerospace"
  | "Biosystems"
  | "Chemical"
  | "Civil and Environmental"
  | "Computer Science"
  | "Software"
  | "Electrical"
  | "Computer"
  | "Industrial and Systems"
  | "Materials"
  | "Mechanical";

type Review = {
  id: number;
  date: Date;
  majors: Major[];
  rating: number;
  knowledgeRating: number;
  wouldRecommend: boolean;
  jokes?: boolean;
  friendly?: boolean;
  inspirational?: boolean;
  easyCommunication?: boolean;
  review: string;
};

type Ambassador = {
  id: number;
  name: string;
  major: Major;
  year: number;
  reviews: Review[];
};

const fakeReviews: Review[] = [
  {
    id: 1,
    date: new Date(),
    majors: ["Software", "Mechanical"],
    rating: 5,
    knowledgeRating: 5,
    wouldRecommend: true,
    jokes: true,
    friendly: true,
    inspirational: true,
    easyCommunication: true,
    review:
      "Our tour guide was very friendly and knowledgeable! We had a great time at Auburn and learned a lot about the engineering program. Trevor even told us some jokes!",
  },
  {
    id: 2,
    date: new Date(),
    majors: ["Software", "Mechanical"],
    rating: 5,
    knowledgeRating: 5,
    wouldRecommend: true,
    jokes: true,
    friendly: true,
    inspirational: true,
    easyCommunication: true,
    review:
      "Our tour guide was very friendly and knowledgeable! We had a great time at Auburn and learned a lot about the engineering program. Trevor even told us some jokes!",
  },
  {
    id: 3,
    date: new Date(),
    majors: ["Software", "Mechanical"],
    rating: 5,
    knowledgeRating: 5,
    wouldRecommend: true,
    jokes: true,
    friendly: true,
    inspirational: true,
    easyCommunication: true,
    review:
      "Our tour guide was very friendly and knowledgeable! We had a great time at Auburn and learned a lot about the engineering program. Trevor even told us some jokes!",
  },
  {
    id: 4,
    date: new Date(),
    majors: ["Software", "Mechanical"],
    rating: 5,
    knowledgeRating: 5,
    wouldRecommend: true,
    jokes: true,
    friendly: true,
    inspirational: true,
    easyCommunication: true,
    review:
      "Our tour guide was very friendly and knowledgeable! We had a great time at Auburn and learned a lot about the engineering program. Trevor even told us some jokes!",
  },
  {
    id: 5,
    date: new Date(),
    majors: ["Software", "Mechanical"],
    rating: 5,
    knowledgeRating: 5,
    wouldRecommend: true,
    jokes: true,
    friendly: true,
    inspirational: true,
    easyCommunication: true,
    review:
      "Our tour guide was very friendly and knowledgeable! We had a great time at Auburn and learned a lot about the engineering program. Trevor even told us some jokes!",
  },
];

const fakePerson: Ambassador = {
  id: 1,
  name: "Trevor Aupperle",
  major: "Software",
  year: 2023,
  reviews: fakeReviews,
};

const Ambassador = () => {
  const router = useRouter();
  const { id } = router.query;

  const [ratingSearchValue, setRatingSearchValue] = useState("");
  const [reportButtonHovered, setReportButtonHovered] = useState(-1);

  return (
    <>
      <Head>
        <title>{fakePerson.name} | RateMyCoop</title>
        <meta name="description" content="Generated by create-t3-app" />
        <meta name="theme-color" content="#0b2341" />
        <meta name="apple-mobile-web-app-status-bar-style" content="#0b2341" />
        <link rel="icon" href="/AuburnCupola.ico" />
      </Head>
      <div className="flex flex-col gap-8">
        <Navbar />
        <div className="flex flex-col items-center px-6">
          <div className="flex w-full max-w-7xl flex-col gap-16 sm:flex-row">
            <div className="flex flex-col gap-4 text-auburnBlue-900 sm:w-1/2 ">
              <div className="flex flex-col gap-1">
                <h2 className="text-3xl font-bold">Trevor Aupperle</h2>
                <h3 className="text-lg text-auburnOrange-900">
                  Software Engineering
                </h3>
              </div>
              <div className="flex items-start gap-2 font-bold">
                <div className="text-5xl">4.3</div>
                <div className="text-lg text-gray-400">/ 5</div>
              </div>
              <div className="text-sm">
                Overall rating based on{" "}
                <span className="font-bold">5 ratings</span>
              </div>
              <div className="h-[1px] w-full bg-gray-300"></div>
              <div className="flex w-full items-center justify-center gap-4">
                <div className="flex flex-col items-center">
                  <div className="text-2xl font-bold">97%</div>
                  <div className="text-sm text-gray-700">Would recommend</div>
                </div>
                <div className="h-full min-h-[48px] w-[1px] bg-gray-300"></div>
                <div className="flex flex-col items-center">
                  <div className="text-2xl font-bold">4.5</div>
                  <div className="text-sm text-gray-700">
                    Level of knowledge
                  </div>
                </div>
              </div>
              <Link
                href="/"
                className="rounded-md bg-auburnOrange-800 px-4 py-2 text-center text-white hover:bg-auburnOrange-900"
              >
                Rate Trevor Aupperle
              </Link>
              <RatingBars ratings={[80, 10, 8, 2, 0]} />
            </div>
            <div className="w-full">
              <div className="flex items-center justify-between border-b border-gray-200 pb-4">
                <h6 className="text-lg font-bold">Ratings</h6>
                <div className="flex items-center">
                  <div className="relative">
                    <div className="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-4">
                      <Image
                        src="/svgs/Magnifier.svg"
                        width={16}
                        height={16}
                        alt="Search icon"
                      />
                    </div>
                    <input
                      type="text"
                      id="RatingsSearchBar"
                      className="border-1 block w-full rounded-l-md border-gray-300 py-2 pl-10 text-sm text-auburnBlue-900 transition-all duration-200 focus:border-auburnOrange-900 focus:ring-auburnOrange-900"
                      value={ratingSearchValue}
                      onChange={(e) => setRatingSearchValue(e.target.value)}
                      placeholder="Search ratings"
                    />
                  </div>
                  <Menu as="div" className="relative inline-block text-left">
                    <div>
                      <Menu.Button className="inline-flex w-full justify-center rounded-r-md border-y border-r border-gray-300 px-4 py-2 text-sm font-medium text-auburnBlue-900 hover:bg-gray-100 focus-visible:ring-2 focus-visible:ring-white/75">
                        Sort
                        <ChevronDownIcon
                          className="-mr-1 ml-2 h-5 w-5 text-gray-300 hover:text-gray-400"
                          aria-hidden="true"
                        />
                      </Menu.Button>
                    </div>
                    <Transition
                      as={Fragment}
                      enter="transition ease-out duration-100"
                      enterFrom="transform opacity-0 scale-95"
                      enterTo="transform opacity-100 scale-100"
                      leave="transition ease-in duration-75"
                      leaveFrom="transform opacity-100 scale-100"
                      leaveTo="transform opacity-0 scale-95"
                    >
                      <Menu.Items className="absolute right-0 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black/5 focus:outline-none">
                        <div className="px-1 py-1 ">
                          <Menu.Item>
                            {({ active }) => (
                              <button
                                className={`${
                                  active
                                    ? "bg-auburnBlue-900 text-white"
                                    : "text-auburnBlue-900"
                                } group flex w-full items-center rounded-md px-2 py-2 text-sm`}
                              >
                                Newest
                              </button>
                            )}
                          </Menu.Item>
                          <Menu.Item>
                            {({ active }) => (
                              <button
                                className={`${
                                  active
                                    ? "bg-auburnBlue-900 text-white"
                                    : "text-auburnBlue-900"
                                } group flex w-full items-center rounded-md px-2 py-2 text-sm`}
                              >
                                Oldest
                              </button>
                            )}
                          </Menu.Item>
                        </div>
                        <div className="px-1 py-1">
                          <Menu.Item>
                            {({ active }) => (
                              <button
                                className={`${
                                  active
                                    ? "bg-auburnBlue-900 text-white"
                                    : "text-auburnBlue-900"
                                } group flex w-full items-center rounded-md px-2 py-2 text-sm`}
                              >
                                Rating: High to Low
                              </button>
                            )}
                          </Menu.Item>
                          <Menu.Item>
                            {({ active }) => (
                              <button
                                className={`${
                                  active
                                    ? "bg-auburnBlue-900 text-white"
                                    : "text-auburnBlue-900"
                                } group flex w-full items-center rounded-md px-2 py-2 text-sm`}
                              >
                                Rating: Low to High
                              </button>
                            )}
                          </Menu.Item>
                        </div>
                      </Menu.Items>
                    </Transition>
                  </Menu>
                </div>
              </div>

              <div className="flex flex-col gap-6 py-4">
                {fakeReviews.map((review) => (
                  <div
                    key={review.id}
                    className="flex flex-col gap-2 rounded-md bg-gray-50 p-4 text-auburnBlue-900 shadow shadow-auburnBlue-50 sm:gap-4"
                  >
                    <div className="flex flex-col justify-between gap-2 sm:flex-row sm:items-center sm:gap-0">
                      <div className="flex flex-col gap-1">
                        <div className="text-lg font-bold">
                          {review.majors.join(", ")}
                        </div>
                        <div className="text-sm">
                          {review.date.toLocaleDateString("en-us", {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                          })}
                        </div>
                      </div>
                      <div className="h-[1px] w-full bg-gray-300 sm:hidden"></div>
                      <div className="flex items-center gap-4 sm:justify-center">
                        <div className="flex flex-col items-center">
                          <div className="text-sm">Overall</div>
                          <div className="text-lg font-bold">
                            {review.rating.toFixed(1)}
                          </div>
                        </div>
                        <div className="h-full min-h-[24px] w-[1px] bg-auburnOrange-700"></div>
                        <div className="flex flex-col items-center">
                          <div className="text-sm">Knowledge</div>
                          <div className="text-lg font-bold">
                            {review.knowledgeRating.toFixed(1)}
                          </div>
                        </div>
                      </div>
                    </div>
                    <div>{review.review}</div>
                    <div className="flex items-center justify-between gap-4">
                      <div className="flex items-center gap-4 overflow-auto pt-2 sm:p-0">
                        {review.jokes && (
                          <div className="whitespace-nowrap rounded-full bg-auburnBlue-900 px-4 py-1 text-sm font-semibold text-white">
                            Told Jokes
                          </div>
                        )}
                        {review.friendly && (
                          <div className="rounded-full bg-auburnBlue-900 px-4 py-1 text-sm font-semibold text-white">
                            Friendly
                          </div>
                        )}
                        {review.inspirational && (
                          <div className="rounded-full bg-auburnBlue-900 px-4 py-1 text-sm font-semibold text-white">
                            Inspirational
                          </div>
                        )}
                        {review.easyCommunication && (
                          <div className="whitespace-nowrap rounded-full bg-auburnBlue-900 px-4 py-1 text-sm font-semibold text-white">
                            Easy Communication
                          </div>
                        )}
                      </div>
                      <button
                        onMouseEnter={() => setReportButtonHovered(review.id)}
                        onMouseLeave={() => setReportButtonHovered(-1)}
                      >
                        {reportButtonHovered === review.id ? (
                          <FlagIconSolid className="h-6 w-6 text-auburnOrange-900" />
                        ) : (
                          <FlagIcon className="h-6 w-6 text-auburnOrange-900" />
                        )}
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
        <Footer />
      </div>
    </>
  );
};
export default Ambassador;
